package main

import (
	"fmt"
	"io/ioutil"
	"net/url"
	"os"
	"strings"
)

func contains(slice []string, target string) bool {
	for _, s := range slice {
		if s == target {
			return true
		}
	}
	return false
}

func processURLs(urls []string) []string {
	var validDomains []string

	for _, urlString := range urls {
		urlString = strings.TrimSpace(urlString)
		u, err := url.Parse(urlString)
		if err != nil || u.Host == "" {
			u, repErr := url.ParseRequestURI("https://" + urlString)
			if repErr != nil {
				continue //ignore
			}

			if !contains(validDomains, u.Host) {
				validDomains = append(validDomains, u.Host)
			}
			continue
		}
		// Ignore duplicate domains
		if !contains(validDomains, u.Host) {
			validDomains = append(validDomains, u.Host)
		}
	}

	return validDomains
}

func main() {
	if len(os.Args) != 2 {
		fmt.Println("Usage: " + os.Args[0] + " <filename>")
		return
	}

	filename := os.Args[1]
	content, err := ioutil.ReadFile(filename)
	if err != nil {
		fmt.Println("Error reading file:", err)
		return
	}

	lines := strings.Split(string(content), "\n")

	validDomains := processURLs(lines)

	for _, domain := range validDomains {
		fmt.Println(domain)
	}
}
